services:
  reverseproxy:
    image: nginx:1.26
    networks:
      - dinesh
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/extras:/etc/nginx/extras
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    restart: always
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    networks:
      - dinesh
    restart: unless-stopped
    volumes: 
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


  frontend:
    image: docker.io/frontend:latest
    networks:
      - dinesh
    restart: always


  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./data/config/loki-config.yml:/etc/loki/loki-config.yml
    command: -config.file=/etc/loki/loki-config.yml
    restart: unless-stopped
    networks:
      - dinesh

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    user: root
    volumes:
      - ./data/config/promtail-config.yml:/etc/promtail/promtail-config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log:/var/log:ro
      - ./data/config:/var/lib/promtail
    command: -config.file=/etc/promtail/promtail-config.yml
    restart: unless-stopped
    networks:
      - dinesh

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "8080:3000"
    env_file:
      - ./data/config/grafana.env
    networks:
      - dinesh
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./data/config/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./data/config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - dinesh

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro'
    ports:
      - "9100:9100"
    networks:
      - dinesh




networks:
  dinesh:

